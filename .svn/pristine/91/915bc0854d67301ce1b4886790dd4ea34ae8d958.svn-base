using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using System.Web.Http;
using TradingSite.Models;

namespace TradingSite.Controllers
{
    public class AuthController : ApiController
    {
        private readonly WebHelper m_webHelper = new WebHelper();

        private readonly Dictionary<int, string> m_userAuthDic = new Dictionary<int, string>();

        [HttpGet]
        [Route("api/auth/userid")]
        public HttpResponseMessage GetUserID()
        {
            HttpResponseMessage response = new HttpResponseMessage();

            using (TradingSiteEntities db = new TradingSiteEntities())
            {
                response.Content = new StringContent($"{db.TemporaryUser.Count()}");
                response.StatusCode = HttpStatusCode.Accepted;

                db.TemporaryUser.Add(new TemporaryUser {UserID = db.TemporaryUser.Count()});
                db.SaveChanges();
            }

            return response;
        }

        [HttpGet]
        [Route("api/auth/user/{id}")]
        public HttpResponseMessage GetUser(int id)
        {
            string steamid = "";

            using (TradingSiteEntities db = new TradingSiteEntities())
            {
                foreach(var user in db.TemporaryUser)
                {
                    if(user.UserID == id)
                    {
                        steamid = user.SteamID.ToString();
                        break;
                    }
                }
            }

            var response = new HttpResponseMessage
            {
                Content = new StringContent($"{steamid}"),
                StatusCode = HttpStatusCode.Accepted
            };

            return response;
        }

        /// <summary>
        /// Steam openID page
        /// </summary>
        /// <returns></returns>
        [Route("api/auth/{id}")]
        public HttpResponseMessage Get(int id)
        {
            var response = Request.CreateResponse(HttpStatusCode.Redirect);
            response.Headers.Location = new Uri($"https://steamcommunity.com/openid/login?openid.mode=checkid_setup&openid.ns=http://specs.openid.net/auth/2.0&openid.identity=http://specs.openid.net/auth/2.0/identifier_select&openid.claimed_id=http://specs.openid.net/auth/2.0/identifier_select&openid.return_to=http://localhost:43410/api/auth/AuthVerify/{id}&openid.realm=http://localhost:43410/");

            return response;
        }

        /// <summary>
        /// get the users profile data and return to the tradingsite
        /// </summary>
        /// <param name="test"></param>
        /// <returns></returns>
        [HttpGet]
        [Route("api/auth/AuthVerify/{id}")]
        public async Task<HttpResponseMessage> AuthVerify(int id, HttpRequestMessage test)
        {
            var queryParams = Uri.UnescapeDataString(test.RequestUri.Query).Split('&');
            string steamid = "";

            //TODO benutze Return to als uri für die location

            //"openid.identity = https://steamcommunity.com/openid/id/76561198000479819"

            foreach(string param in queryParams)
            {
                if(param.StartsWith("openid.identity"))
                {
                    steamid = param.Split('/').Last();
                    break;
                }
            }

            var steamid64 = Convert.ToInt64(steamid);

            using (TradingSiteEntities db = new TradingSiteEntities())
            {
                var test3 = db.TemporaryUser.FirstOrDefault(user => user.UserID == id);

                if(test3 != null)
                {
                    test3.SteamID = steamid64;
                }

                //foreach (var user in db.TemporaryUser)
                //{
                //    if (user.UserID == id)
                //    {
                //        user.SteamID = ;
                //        break;
                //    }
                //}

                db.SaveChanges();
            }

            string url = $"http://api.steampowered.com/ISteamUser/GetPlayerSummaries/v0002/?key=51687C8CCA7046C73528DCD5B88730C1&steamids={steamid}";

            var stringresponse = await m_webHelper.GetStringFromRequest(url).ConfigureAwait(false);

            var response = Request.CreateResponse(HttpStatusCode.Redirect);
            response.Content = new StringContent(stringresponse);
            response.Headers.Location = new Uri("http://localhost:4200/");

            return response;
        }
    }
}
